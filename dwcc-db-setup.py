import logging
#import sqlite3
import mysql.connector
#DB_FILE = 'dwcc.db'
#here is the setup info for the sqlite db
#conn = sqlite3.connect(DB_FILE)
#conn.text_factory = str
#cursor = conn.cursor()
import config


mydb = mysql.connector.connect(
  host="10.1.0.7",
  user= config.username,
  password= config.password,
  database="dwcc"
)

mycursor = mydb.cursor()



def start():
	dbmaker()

#This check for the database and if it is not found, it will make it.
def dbmaker():
#	mycursor.execute("CREATE DATABASE dwcc")
#	conn = sqlite3.connect(DB_FILE)
#	cursor = conn.cursor()
	mycursor.execute('''CREATE TABLE if not exists dwccincoming
(ID INTEGER PRIMARY KEY auto_increment NOT NULL,
wlansa char(50),
wlanbssid char(50),
radiotapchannelfreq char(50),
wlanmgtextcapb19 char(50),
wlanfcprotected char(50),
wlanradiochannel char(50),
wlanfcpwrmgt char(50),
wlanmgtfixedcapabilitiesradiomeasurement char(50),
wlanmgthtmcssettxmaxss char(50),
radiotapchannelflagsofdm char(50),
radiotapchannelflags5ghz char(50),
radiotapchannelflags2ghz char(50),
wlanmgtfixedcapabilitiesspecman char(50),
wlanmgtpowercapmax char(50),
wlanmgtpowercapmin char(50),
wlanmgtrsncapabilitiesmfpc char(50),
wlanmgtextcapb31 char(50),
wlanmgtextcapb32 char(50),
wlanmgtextcapb46 char(50),
wlanmgttagnumber char(50),
wlanmgtvhtcapabilitiesmaxmpdulength char(50),
wlanmgtvhtcapabilitiessupportedchanwidthset char(50),
wlanmgtvhtcapabilitiesrxldpc char(50),
wlanmgtvhtcapabilitiesshort80 char(50),
wlanmgtvhtcapabilitiesshort160 char(50),
wlanmgtvhtcapabilitiestxstbc char(50),
wlanmgtvhtcapabilitiessubeamformer char(50),
wlanmgtvhtcapabilitiessubeamformee char(50),
wlanmgtvhtcapabilitiessoundingdimensions char(50),
wlanmgtvhtcapabilitiesmubeamformer char(50),
wlanmgtvhtcapabilitiesmubeamformee char(50),
wlanmgttagoui char(50),
wlanmgtfixedcapabilitiesess char(50),
radiotapantenna char(50),
wlanmgtssid char(200),
wlanmgtextcapb4 char(50),
wlanmgtextcapb3 char(50),
wlanmgtextcapb2 char(50),
wlanmgtextcapb1 char(50),
wlanmgtextcapb6 char(50),
wlanmgtextcapb8 char(50),
wlanmgtextcapb9 char(50),
wlanmgtextcapb10 char(50),
wlanmgtextcapb11 char(50),
wlanmgtextcapb12 char(50),
wlanmgtextcapb13 char(50),
wlanmgtextcapb14 char(50),
wlanmgtextcapb15 char(50),
wlanmgtextcapb16 char(50),
wlanmgtextcapb17 char(50),
wlanmgtextcapb18 char(50),
wlanmgtextcapb20 char(50),
wlanmgtextcapb21 char(50),
wlanmgtextcapb22 char(50),
wlanmgtextcapb23 char(50),
wlanmgtextcapb24 char(50),
wlanmgtextcapb25 char(50),
wlanmgtextcapb26 char(50),
wlanmgtextcapb27 char(50),
wlanmgtextcapb28 char(50),
wlanmgtextcapb29 char(50),
wlanmgtextcapb30 char(50),
wlanmgtextcapb33 char(50),
wlanmgtextcapb34 char(50),
wlanmgtextcapb35 char(50),
wlanmgtextcapb36 char(50),
wlanmgtextcapb37 char(50),
wlanmgtextcapb38 char(50),
wlanmgtextcapb39 char(50),
wlanmgtextcapb40 char(50),
wlanmgtextcapservintgranularity char(50),
wlanmgtextcapb44 char(50),
wlanmgtextcapb45 char(50),
wlanmgtextcapb47 char(50),
wlanmgtextcapb48 char(50),
wlanmgtextcapb61 char(50),
wlanmgtextcapb62 char(50),
wlanmgtextcapb63 char(50),
wlanmgtvhtcapabilitiesrxstbc char(50),
wlanmgtvhtmcssetrxmcsmapss1 char(50),
wlanmgtvhtmcssetrxmcsmapss2 char(50),
wlanmgtvhtmcssetrxmcsmapss3 char(50),
wlanmgtvhtmcssetrxmcsmapss4 char(50),
wlanmgtvhtmcssettxmcsmapss1 char(50),
wlanmgtvhtmcssettxmcsmapss2 char(50),
wlanmgtvhtmcssettxmcsmapss3 char(50),
wlanmgtvhtmcssettxmcsmapss4 char(50),
wlanmgthtmcssetrxbitmask char(50),
wlanmgthtampduparam char(50),
wlansaconverted char(200));''')

	
	mycursor.execute('''CREATE TABLE if not exists dwccincomingprobe
(ID INTEGER PRIMARY KEY auto_increment NOT NULL,
wlansa char(50),
wlanbssid char(50),
radiotapchannelfreq char(50),
wlanmgtextcapb19 char(50),
wlanfcprotected char(50),
wlanradiochannel char(50),
wlanfcpwrmgt char(50),
wlanmgtfixedcapabilitiesradiomeasurement char(50),
wlanmgthtmcssettxmaxss char(50),
radiotapchannelflagsofdm char(50),
radiotapchannelflags5ghz char(50),
radiotapchannelflags2ghz char(50),
wlanmgtfixedcapabilitiesspecman char(50),
wlanmgtpowercapmax char(50),
wlanmgtpowercapmin char(50),
wlanmgtrsncapabilitiesmfpc char(50),
wlanmgtextcapb31 char(50),
wlanmgtextcapb32 char(50),
wlanmgtextcapb46 char(50),
wlanmgttagnumber char(50),
wlanmgtvhtcapabilitiesmaxmpdulength char(50),
wlanmgtvhtcapabilitiessupportedchanwidthset char(50),
wlanmgtvhtcapabilitiesrxldpc char(50),
wlanmgtvhtcapabilitiesshort80 char(50),
wlanmgtvhtcapabilitiesshort160 char(50),
wlanmgtvhtcapabilitiestxstbc char(50),
wlanmgtvhtcapabilitiessubeamformer char(50),
wlanmgtvhtcapabilitiessubeamformee char(50),
wlanmgtvhtcapabilitiessoundingdimensions char(50),
wlanmgtvhtcapabilitiesmubeamformer char(50),
wlanmgtvhtcapabilitiesmubeamformee char(50),
wlanmgttagoui char(50),
wlanmgtfixedcapabilitiesess char(50),
radiotapantenna char(50),
wlanmgtssid char(200),
wlanmgtextcapb4 char(50),
wlanmgtextcapb3 char(50),
wlanmgtextcapb2 char(50),
wlanmgtextcapb1 char(50),
wlanmgtextcapb6 char(50),
wlanmgtextcapb8 char(50),
wlanmgtextcapb9 char(50),
wlanmgtextcapb10 char(50),
wlanmgtextcapb11 char(50),
wlanmgtextcapb12 char(50),
wlanmgtextcapb13 char(50),
wlanmgtextcapb14 char(50),
wlanmgtextcapb15 char(50),
wlanmgtextcapb16 char(50),
wlanmgtextcapb17 char(50),
wlanmgtextcapb18 char(50),
wlanmgtextcapb20 char(50),
wlanmgtextcapb21 char(50),
wlanmgtextcapb22 char(50),
wlanmgtextcapb23 char(50),
wlanmgtextcapb24 char(50),
wlanmgtextcapb25 char(50),
wlanmgtextcapb26 char(50),
wlanmgtextcapb27 char(50),
wlanmgtextcapb28 char(50),
wlanmgtextcapb29 char(50),
wlanmgtextcapb30 char(50),
wlanmgtextcapb33 char(50),
wlanmgtextcapb34 char(50),
wlanmgtextcapb35 char(50),
wlanmgtextcapb36 char(50),
wlanmgtextcapb37 char(50),
wlanmgtextcapb38 char(50),
wlanmgtextcapb39 char(50),
wlanmgtextcapb40 char(50),
wlanmgtextcapservintgranularity char(50),
wlanmgtextcapb44 char(50),
wlanmgtextcapb45 char(50),
wlanmgtextcapb47 char(50),
wlanmgtextcapb48 char(50),
wlanmgtextcapb61 char(50),
wlanmgtextcapb62 char(50),
wlanmgtextcapb63 char(50),
wlanmgtvhtcapabilitiesrxstbc char(50),
wlanmgtvhtmcssetrxmcsmapss1 char(50),
wlanmgtvhtmcssetrxmcsmapss2 char(50),
wlanmgtvhtmcssetrxmcsmapss3 char(50),
wlanmgtvhtmcssetrxmcsmapss4 char(50),
wlanmgtvhtmcssettxmcsmapss1 char(50),
wlanmgtvhtmcssettxmcsmapss2 char(50),
wlanmgtvhtmcssettxmcsmapss3 char(50),
wlanmgtvhtmcssettxmcsmapss4 char(50),
wlanmgthtmcssetrxbitmask char(50),
wlanmgthtampduparam char(50),
wlansaconverted char(200));''')


	mycursor.execute('''CREATE TABLE if not exists dwccap
(ID INTEGER PRIMARY KEY auto_increment NOT NULL,
wlanbssid char(50),
wlanradiochannel char(50),
wlanmgtssid char(200),
wlansaconverted char(200));''')


	mycursor.execute('''CREATE TABLE if not exists dwccheatmapincoming
(ID INTEGER PRIMARY KEY auto_increment NOT NULL,
wlansa char(50),
wlanbssid char(50),
wlanradiosignaldbm char(200),
node char(50),
timestamp char(50),
wlansaconverted char(200),
addedtoreporting char(50));''')


	mycursor.execute('''CREATE TABLE if not exists dwccheatmapreporting 
(ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
wlansa char( 50 ),
timestamp	char( 50 ),
sigfromnode1	char( 50 ),
sigfromnode2	char( 50 ),
sigfromnode3	char( 50 ),
sigfromnode4	char( 50 ),
sigfromnode5	char( 50 ),
sigfromnode6	char( 50 ),
sigfromnode7	char( 50 ),
sigfromnode8	char( 50 ),
sigfromnode9	char( 50 ),
sigfromnode10	char( 50 ));''')

	mycursor.execute('''CREATE TABLE if not exists taxonomyprobe 
(ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
wlansa char(50),
wlanbssid char(50),
radiotapchannelfreq char(50),
wlanmgtextcapb19 char(50),
wlanfcprotected char(50),
wlanradiochannel char(50),
wlanfcpwrmgt char(50),
wlanmgtfixedcapabilitiesradiomeasurement char(50),
wlanmgthtmcssettxmaxss char(50),
radiotapchannelflagsofdm char(50),
radiotapchannelflags5ghz char(50),
radiotapchannelflags2ghz char(50),
wlanmgtfixedcapabilitiesspecman char(50),
wlanmgtpowercapmax char(50),
wlanmgtpowercapmin char(50),
wlanmgtrsncapabilitiesmfpc char(50),
wlanmgtextcapb31 char(50),
wlanmgtextcapb32 char(50),
wlanmgtextcapb46 char(50),
wlanmgttagnumber char(50),
wlanmgtvhtcapabilitiesmaxmpdulength char(50),
wlanmgtvhtcapabilitiessupportedchanwidthset char(50),
wlanmgtvhtcapabilitiesrxldpc char(50),
wlanmgtvhtcapabilitiesshort80 char(50),
wlanmgtvhtcapabilitiesshort160 char(50),
wlanmgtvhtcapabilitiestxstbc char(50),
wlanmgtvhtcapabilitiessubeamformer char(50),
wlanmgtvhtcapabilitiessubeamformee char(50),
wlanmgtvhtcapabilitiessoundingdimensions char(50),
wlanmgtvhtcapabilitiesmubeamformer char(50),
wlanmgtvhtcapabilitiesmubeamformee char(50),
wlanmgttagoui char(50),
wlanmgtfixedcapabilitiesess char(50),
radiotapantenna char(50),
wlanmgtextcapb4 char(50),
wlanmgtextcapb3 char(50),
wlanmgtextcapb2 char(50),
wlanmgtextcapb1 char(50),
wlanmgtextcapb6 char(50),
wlanmgtextcapb8 char(50),
wlanmgtextcapb9 char(50),
wlanmgtextcapb10 char(50),
wlanmgtextcapb11 char(50),
wlanmgtextcapb12 char(50),
wlanmgtextcapb13 char(50),
wlanmgtextcapb14 char(50),
wlanmgtextcapb15 char(50),
wlanmgtextcapb16 char(50),
wlanmgtextcapb17 char(50),
wlanmgtextcapb18 char(50),
wlanmgtextcapb20 char(50),
wlanmgtextcapb21 char(50),
wlanmgtextcapb22 char(50),
wlanmgtextcapb23 char(50),
wlanmgtextcapb24 char(50),
wlanmgtextcapb25 char(50),
wlanmgtextcapb26 char(50),
wlanmgtextcapb27 char(50),
wlanmgtextcapb28 char(50),
wlanmgtextcapb29 char(50),
wlanmgtextcapb30 char(50),
wlanmgtextcapb33 char(50),
wlanmgtextcapb34 char(50),
wlanmgtextcapb35 char(50),
wlanmgtextcapb36 char(50),
wlanmgtextcapb37 char(50),
wlanmgtextcapb38 char(50),
wlanmgtextcapb39 char(50),
wlanmgtextcapb40 char(50),
wlanmgtextcapservintgranularity char(50),
wlanmgtextcapb44 char(50),
wlanmgtextcapb45 char(50),
wlanmgtextcapb47 char(50),
wlanmgtextcapb48 char(50),
wlanmgtextcapb61 char(50),
wlanmgtextcapb62 char(50),
wlanmgtextcapb63 char(50),
wlanmgtvhtcapabilitiesrxstbc char(50),
wlanmgtvhtmcssetrxmcsmapss1 char(50),
wlanmgtvhtmcssetrxmcsmapss2 char(50),
wlanmgtvhtmcssetrxmcsmapss3 char(50),
wlanmgtvhtmcssetrxmcsmapss4 char(50),
wlanmgtvhtmcssettxmcsmapss1 char(50),
wlanmgtvhtmcssettxmcsmapss2 char(50),
wlanmgtvhtmcssettxmcsmapss3 char(50),
wlanmgtvhtmcssettxmcsmapss4 char(50),
wlanmgtssid char(50),
wlanmgthtmcssetrxbitmask char(50),
wlanmgthtampduparam char(50),
vendormake char(100));''')


	mycursor.execute('''CREATE TABLE if not exists taxonomyassreass
(ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
wlansa char(50),
wlanbssid char(50),
radiotapchannelfreq char(50),
wlanmgtextcapb19 char(50),
wlanfcprotected char(50),
wlanradiochannel char(50),
wlanfcpwrmgt char(50),
wlanmgtfixedcapabilitiesradiomeasurement char(50),
wlanmgthtmcssettxmaxss char(50),
radiotapchannelflagsofdm char(50),
radiotapchannelflags5ghz char(50),
radiotapchannelflags2ghz char(50),
wlanmgtfixedcapabilitiesspecman char(50),
wlanmgtpowercapmax char(50),
wlanmgtpowercapmin char(50),
wlanmgtrsncapabilitiesmfpc char(50),
wlanmgtextcapb31 char(50),
wlanmgtextcapb32 char(50),
wlanmgtextcapb46 char(50),
wlanmgttagnumber char(50),
wlanmgtvhtcapabilitiesmaxmpdulength char(50),
wlanmgtvhtcapabilitiessupportedchanwidthset char(50),
wlanmgtvhtcapabilitiesrxldpc char(50),
wlanmgtvhtcapabilitiesshort80 char(50),
wlanmgtvhtcapabilitiesshort160 char(50),
wlanmgtvhtcapabilitiestxstbc char(50),
wlanmgtvhtcapabilitiessubeamformer char(50),
wlanmgtvhtcapabilitiessubeamformee char(50),
wlanmgtvhtcapabilitiessoundingdimensions char(50),
wlanmgtvhtcapabilitiesmubeamformer char(50),
wlanmgtvhtcapabilitiesmubeamformee char(50),
wlanmgttagoui char(50),
wlanmgtfixedcapabilitiesess char(50),
radiotapantenna char(50),
wlanmgtextcapb4 char(50),
wlanmgtextcapb3 char(50),
wlanmgtextcapb2 char(50),
wlanmgtextcapb1 char(50),
wlanmgtextcapb6 char(50),
wlanmgtextcapb8 char(50),
wlanmgtextcapb9 char(50),
wlanmgtextcapb10 char(50),
wlanmgtextcapb11 char(50),
wlanmgtextcapb12 char(50),
wlanmgtextcapb13 char(50),
wlanmgtextcapb14 char(50),
wlanmgtextcapb15 char(50),
wlanmgtextcapb16 char(50),
wlanmgtextcapb17 char(50),
wlanmgtextcapb18 char(50),
wlanmgtextcapb20 char(50),
wlanmgtextcapb21 char(50),
wlanmgtextcapb22 char(50),
wlanmgtextcapb23 char(50),
wlanmgtextcapb24 char(50),
wlanmgtextcapb25 char(50),
wlanmgtextcapb26 char(50),
wlanmgtextcapb27 char(50),
wlanmgtextcapb28 char(50),
wlanmgtextcapb29 char(50),
wlanmgtextcapb30 char(50),
wlanmgtextcapb33 char(50),
wlanmgtextcapb34 char(50),
wlanmgtextcapb35 char(50),
wlanmgtextcapb36 char(50),
wlanmgtextcapb37 char(50),
wlanmgtextcapb38 char(50),
wlanmgtextcapb39 char(50),
wlanmgtextcapb40 char(50),
wlanmgtextcapservintgranularity char(50),
wlanmgtextcapb44 char(50),
wlanmgtextcapb45 char(50),
wlanmgtextcapb47 char(50),
wlanmgtextcapb48 char(50),
wlanmgtextcapb61 char(50),
wlanmgtextcapb62 char(50),
wlanmgtextcapb63 char(50),
wlanmgtvhtcapabilitiesrxstbc char(50),
wlanmgtvhtmcssetrxmcsmapss1 char(50),
wlanmgtvhtmcssetrxmcsmapss2 char(50),
wlanmgtvhtmcssetrxmcsmapss3 char(50),
wlanmgtvhtmcssetrxmcsmapss4 char(50),
wlanmgtvhtmcssettxmcsmapss1 char(50),
wlanmgtvhtmcssettxmcsmapss2 char(50),
wlanmgtvhtmcssettxmcsmapss3 char(50),
wlanmgtvhtmcssettxmcsmapss4 char(50),
wlanmgtssid char(50),
wlanmgthtmcssetrxbitmask char(50),
wlanmgthtampduparam char(50),
vendormake char(100));''')

	
	
start()